Index: src/operation/Filtering.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package operation;\r\n\r\nimport dto.rawDataDto;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class Filtering {\r\n\r\n    // rawDataList 받아와서 필터링, String 배열로 반환\r\n    public ArrayList<String> filter(ArrayList<rawDataDto> rawDataList) {\r\n        System.out.println(\"1. Filtering rawData...\");\r\n        ArrayList<String> preprocessedDataList = new ArrayList<>();      // 전처리된 rawData 받을 List\r\n\r\n        Matcher matcher;    // 정규식에 일치하는 문자열 찾는 객체\r\n        Pattern wordFilter = Pattern.compile(\"[a-z]+\");  // 알파벳으로 이루어진 단어만 인식\r\n        String read = null;  //rawData 담을 String 초기화\r\n        String sentence = null;  // 반환 리스트에 담을 String 초기화\r\n\r\n        try {\r\n            for (rawDataDto rawData : rawDataList) {\r\n                // 1차 전처리\r\n                read = rawData.getTitle();\r\n                read = read.replaceAll(\"<[^>]+>|:|''|\\\"\\\"|!|~|;|,\", \"\"); //HTML 태그 제거, 특수문자 1차 처리\r\n                read = read.toLowerCase();       // 처리된 거 전체 소문자로 변경\r\n\r\n                // 최종 전처리\r\n                matcher = wordFilter.matcher(read);          // 1차 처리 된거에서 단어만 그룹화 (배열이랑 비슷)\r\n\r\n                while (matcher.find()) {\r\n                    if (sentence == null)\r\n                        sentence = matcher.group();\r\n                    else if (matcher.group().length() < 3 || matcher.group().equals(\"with\") || matcher.group().equals(\"can\"))\r\n                        continue;\r\n                    else if (matcher.group().equals(\"are\") || matcher.group().equals(\"new\") || matcher.group().equals(\"but\"))\r\n                        continue;\r\n                    else if (matcher.group().equals(\"any\") || matcher.group().equals(\"you\"))\r\n                        continue;\r\n                    else sentence = sentence + \" \" + matcher.group();\r\n                }\r\n                preprocessedDataList.add(sentence); // 최종 전처리된 문장 전달할 리스트에 추가\r\n\r\n                sentence = null; // 반환 리스트에 담을 String 초기화\r\n            }\r\n\r\n            for (String rawData : preprocessedDataList)\r\n                System.out.println(rawData);\r\n\r\n            System.out.println(\"2. Succeeded to Filtering rawData!\");\r\n        } catch (NullPointerException e) {\r\n            System.out.println(\"2. Failed to Filtering rawData!\");\r\n        }\r\n\r\n        return preprocessedDataList; // 결과값 DB에 전송하기 위한 List 반환\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/operation/Filtering.java b/src/operation/Filtering.java
--- a/src/operation/Filtering.java	
+++ b/src/operation/Filtering.java	
@@ -44,8 +44,10 @@
                 sentence = null; // 반환 리스트에 담을 String 초기화
             }
 
+            /*
             for (String rawData : preprocessedDataList)
                 System.out.println(rawData);
+            */
 
             System.out.println("2. Succeeded to Filtering rawData!");
         } catch (NullPointerException e) {
Index: src/dao/resultDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dao;\r\n\r\n\r\nimport connecter.DBConnection;\r\nimport dto.resultDto;\r\n\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\n\r\npublic class resultDao {\r\n    private Connection conn = null;\r\n\r\n    public void insertResultList(ArrayList<resultDto> resultDataList) {\r\n        DBConnection dc = new DBConnection();\r\n        conn = dc.getConnection(\"172.18.0.6\",\"3307\"); //db 내의 데이터를 저장\r\n        PreparedStatement pstmt = null;\r\n\r\n        try {\r\n            String sql;\r\n            //최종 DB에 결과값이 있으면 현재 찾은 거 더하기\r\n            sql = \"insert into resultData (word, count) values (?, ?) ON DUPLICATE KEY UPDATE count=count + ?\";\r\n            pstmt = conn.prepareStatement(sql);\r\n            for(resultDto result : resultDataList) {\r\n                //PreparedStatement 객체의 참조값 얻어오기\r\n                pstmt = conn.prepareStatement(sql);\r\n                //? 에 필요한값 바인딩하기\r\n                pstmt.setString(1, result.getWord());\r\n                pstmt.setInt(2, result.getCount());\r\n                pstmt.setInt(3, result.getCount());\r\n                //sql 문 실행하기 (INSERT, UPDATE, DELETE)\r\n                pstmt.executeUpdate();\r\n            }\r\n            pstmt.close();\r\n            conn.close();\r\n            System.out.println(\"2. Succeeded to export resultData!\");\r\n        } catch (SQLException e) {\r\n            System.out.println(\"2. Failed to export resultData!\");\r\n        } finally {\r\n            try{\r\n                if(pstmt != null)\r\n                    pstmt.close();\r\n                if(conn != null)\r\n                    conn.close();\r\n                System.out.println(\"3. Succeeded to disconnect distribute_database!\");\r\n            } catch(SQLException e){\r\n                System.out.println(\"3. Failed to disconnect distribute_database!\");\r\n            }\r\n        }\r\n        System.out.println(\"----------------------------------------------\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/dao/resultDao.java b/src/dao/resultDao.java
--- a/src/dao/resultDao.java	
+++ b/src/dao/resultDao.java	
@@ -17,6 +17,7 @@
 
         try {
             String sql;
+
             //최종 DB에 결과값이 있으면 현재 찾은 거 더하기
             sql = "insert into resultData (word, count) values (?, ?) ON DUPLICATE KEY UPDATE count=count + ?";
             pstmt = conn.prepareStatement(sql);
@@ -48,4 +49,19 @@
         }
         System.out.println("----------------------------------------------");
     }
+
+    public void deleteResultData()
+    {
+        try {
+            DBConnection dc = new DBConnection();
+            Connection conn = dc.getConnection("172.18.0.6","3307");
+            String sql = "DELETE FROM resultData";
+            PreparedStatement pstmt = conn.prepareStatement(sql);
+            pstmt.executeQuery(sql);
+        }
+        catch (SQLException e)
+        {
+            System.out.println("Can't Delete resultData");
+        }
+    }
 }
Index: src/dao/rawDataDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dao;\r\n\r\nimport connecter.DBConnection;\r\nimport dto.rawDataDto;\r\n\r\nimport java.sql.*;\r\nimport java.util.ArrayList;\r\n\r\npublic class rawDataDao {\r\n    private Connection conn = null;\r\n    private Statement state = null;\r\n\r\n    // 배열로 기존 DB 내역 가져오기\r\n    public ArrayList<rawDataDto> importRawData() {\r\n\r\n        ArrayList<rawDataDto> rawDataList = new ArrayList<>(); // 받은 RawData를 전송할 List\r\n\r\n        try {\r\n            DBConnection dc = new DBConnection();\r\n            conn = dc.getConnection(\"127.0.0.1\",\"3307\"); //db 내의 데이터를 저장\r\n            state = conn.createStatement(); //sql 문을 실행하기 위해 conn 연결 정보를 state로 생성\r\n\r\n            String sql;\r\n            // rawData 필터링\r\n            sql = \"select * from rawData\";\r\n            ResultSet rs = state.executeQuery(sql); // sql 실행결과를 rs에 저장\r\n            while (rs.next()) {\r\n                int id = rs.getInt(\"id\");\r\n                String title = rs.getString(\"title\");\r\n                rawDataList.add(new rawDataDto(id, title)); //전처리한 DB 결과를 List 저장\r\n            }\r\n            rs.close();\r\n            state.close();\r\n            conn.close();\r\n            System.out.println(\"2. Succeeded to import rawData!\");\r\n        } catch (SQLException e) {\r\n            System.out.println(\"2. Failed to import rawData!\");\r\n        } finally {\r\n            try{\r\n                if(state != null)\r\n                    state.close();\r\n                if(conn != null)\r\n                    conn.close();\r\n                System.out.println(\"3. Succeeded to disconnect distribute_database!\");\r\n            } catch(SQLException e){\r\n                System.out.println(\"3. Failed to disconnect distribute_database!\");\r\n            }\r\n        }\r\n        System.out.println(\"----------------------------------------------\");\r\n        return rawDataList; //RawData List 반환\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/dao/rawDataDao.java b/src/dao/rawDataDao.java
--- a/src/dao/rawDataDao.java	
+++ b/src/dao/rawDataDao.java	
@@ -26,7 +26,7 @@
             ResultSet rs = state.executeQuery(sql); // sql 실행결과를 rs에 저장
             while (rs.next()) {
                 int id = rs.getInt("id");
-                String title = rs.getString("title");
+                String title = rs.getString("data");
                 rawDataList.add(new rawDataDto(id, title)); //전처리한 DB 결과를 List 저장
             }
             rs.close();
Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import RMI.RemoteServer;\r\n\r\npublic class Main {\r\n    public static void main(String[] args){\r\n        System.out.println(\"----------------------Start-------------------\");\r\n        try\r\n        {\r\n            RemoteServer server = new RemoteServer();\r\n            server.startServer();\r\n        }\r\n        catch(Exception e)\r\n        {\r\n            System.out.println(\"Client/Server connection Error\");\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	
+++ b/src/Main.java	
@@ -1,10 +1,17 @@
 import RMI.RemoteServer;
+import dao.resultDao;
+
 
 public class Main {
     public static void main(String[] args){
         System.out.println("----------------------Start-------------------");
         try
         {
+            //결과값DB 비운다.
+            resultDao resultDao = new resultDao();
+            resultDao.deleteResultData();
+
+            //서버가 작동되며 클라이언트를 기다린다.
             RemoteServer server = new RemoteServer();
             server.startServer();
         }
@@ -14,6 +21,5 @@
             e.printStackTrace();
         }
     }
-
 }
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ArtifactsWorkspaceSettings\">\r\n    <artifacts-to-build>\r\n      <artifact name=\"word_counting:jar\" />\r\n    </artifacts-to-build>\r\n  </component>\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"606e6ed4-ec3d-4f95-973f-9b55e2f6cd59\" name=\"변경\" comment=\"Ver 1.1&#10;add RMI\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/RMI/RemoteInterface.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/RMI/RemoteServer.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/RMI/WordCounting.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/modules.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/connecter/DBConnection.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/connecter/DBConnection.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/dao/rawDataDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/dao/rawDataDao.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/dao/resultDao.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/dao/resultDao.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/word_counting.iml\" beforeDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"AnnotationType\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"distribute_server\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GithubDefaultAccount\">\r\n    <option name=\"defaultAccountId\" value=\"6ee6b3f8-4e2d-4aaa-b55d-266137d5702f\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2HSMTvYs7LgydT8ngbXcLTjv0gY\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;extract.method.default.visibility&quot;: &quot;private&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/bangw/OneDrive/바탕 화면/JAVA_workspace/distribute_server&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Artifacts&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;\r\n  },\r\n  &quot;keyToStringList&quot;: {\r\n    &quot;DatabaseDriversLRU&quot;: [\r\n      &quot;mariadb&quot;\r\n    ]\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"dto\" />\r\n      <recent name=\"dao\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\bangw\\OneDrive\\바탕 화면\\JAVA_workspace\\word_counting\\src\\RMI\" />\r\n      <recent name=\"C:\\Users\\DoxB\\Desktop\\프로젝트_자바\\word_counting\\lib\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"distribute_server\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"애플리케이션 수준\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"디폴트 작업\">\r\n      <changelist id=\"606e6ed4-ec3d-4f95-973f-9b55e2f6cd59\" name=\"변경\" comment=\"\" />\r\n      <created>1668274042288</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1668274042288</updated>\r\n      <workItem from=\"1668274043523\" duration=\"29410000\" />\r\n      <workItem from=\"1668361805631\" duration=\"920000\" />\r\n      <workItem from=\"1668363543190\" duration=\"240000\" />\r\n      <workItem from=\"1668412445671\" duration=\"4996000\" />\r\n      <workItem from=\"1668499304899\" duration=\"982000\" />\r\n      <workItem from=\"1668508107552\" duration=\"10789000\" />\r\n      <workItem from=\"1668531416220\" duration=\"261000\" />\r\n      <workItem from=\"1668531681150\" duration=\"4000\" />\r\n      <workItem from=\"1668568598672\" duration=\"11000\" />\r\n      <workItem from=\"1668570774621\" duration=\"24000\" />\r\n      <workItem from=\"1668589453757\" duration=\"14029000\" />\r\n      <workItem from=\"1668624733877\" duration=\"9000\" />\r\n      <workItem from=\"1668624763524\" duration=\"956000\" />\r\n      <workItem from=\"1668626208050\" duration=\"218000\" />\r\n      <workItem from=\"1668628163753\" duration=\"740000\" />\r\n      <workItem from=\"1668689751400\" duration=\"1020000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Ver 1.0\">\r\n      <created>1668350430195</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668350430195</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Ver 1.1\">\r\n      <created>1668412993360</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1668412993360</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/distribute_server\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_FILTERS\">\r\n      <map>\r\n        <entry key=\"Branch\">\r\n          <value>\r\n            <list>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"origin/distribute_server\" />\r\n                </option>\r\n              </RecentGroup>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"master\" />\r\n                </option>\r\n              </RecentGroup>\r\n              <RecentGroup>\r\n                <option name=\"FILTER_VALUES\">\r\n                  <option value=\"origin/master\" />\r\n                </option>\r\n              </RecentGroup>\r\n            </list>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Ver 1.0\" />\r\n    <MESSAGE value=\"Ver 1.1\" />\r\n    <MESSAGE value=\"Ver 1.1&#10;add RMI\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Ver 1.1&#10;add RMI\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -10,17 +10,11 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="606e6ed4-ec3d-4f95-973f-9b55e2f6cd59" name="변경" comment="Ver 1.1&#10;add RMI">
-      <change afterPath="$PROJECT_DIR$/src/RMI/RemoteInterface.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/RMI/RemoteServer.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/RMI/WordCounting.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/connecter/DBConnection.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/connecter/DBConnection.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/dao/rawDataDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/dao/rawDataDao.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/dao/resultDao.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/dao/resultDao.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/word_counting.iml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/operation/Filtering.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/operation/Filtering.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -48,34 +42,37 @@
   </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProblemsViewState">
+    <option name="selectedTabId" value="CurrentFile" />
   </component>
   <component name="ProjectId" id="2HSMTvYs7LgydT8ngbXcLTjv0gY" />
   <component name="ProjectViewState">
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
-    &quot;extract.method.default.visibility&quot;: &quot;private&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/bangw/OneDrive/바탕 화면/JAVA_workspace/distribute_server&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;project.structure.last.edited&quot;: &quot;Artifacts&quot;,
-    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
-    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;org.jetbrains.plugins.github.ui.GithubSettingsConfigurable&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "WebServerToolWindowFactoryState": "false",
+    "extract.method.default.visibility": "private",
+    "last_opened_file_path": "C:/workspace/JAVA_workspace/distribute_server",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "project.structure.last.edited": "Modules",
+    "project.structure.proportion": "0.15",
+    "project.structure.side.proportion": "0.2",
+    "settings.editor.selected.configurable": "org.jetbrains.plugins.github.ui.GithubSettingsConfigurable"
   },
-  &quot;keyToStringList&quot;: {
-    &quot;DatabaseDriversLRU&quot;: [
-      &quot;mariadb&quot;
+  "keyToStringList": {
+    "DatabaseDriversLRU": [
+      "mariadb"
     ]
   }
-}</component>
+}]]></component>
   <component name="RecentsManager">
     <key name="CreateClassDialog.RecentsKey">
       <recent name="dto" />
@@ -123,7 +120,19 @@
       <workItem from="1668624763524" duration="956000" />
       <workItem from="1668626208050" duration="218000" />
       <workItem from="1668628163753" duration="740000" />
-      <workItem from="1668689751400" duration="1020000" />
+      <workItem from="1668689751400" duration="1284000" />
+      <workItem from="1668694478419" duration="108000" />
+      <workItem from="1668696152037" duration="340000" />
+      <workItem from="1668696507709" duration="61000" />
+      <workItem from="1668699509149" duration="4182000" />
+      <workItem from="1668749775549" duration="1953000" />
+      <workItem from="1668762508048" duration="304000" />
+      <workItem from="1668774724478" duration="1958000" />
+      <workItem from="1668780201742" duration="82000" />
+      <workItem from="1668942620855" duration="778000" />
+      <workItem from="1668944352859" duration="52000" />
+      <workItem from="1669131289283" duration="1617000" />
+      <workItem from="1669492924554" duration="3000" />
     </task>
     <task id="LOCAL-00001" summary="Ver 1.0">
       <created>1668350430195</created>
@@ -139,7 +148,14 @@
       <option name="project" value="LOCAL" />
       <updated>1668412993360</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="Ver 1.1&#10;add RMI">
+      <created>1668690831332</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1668690831332</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
